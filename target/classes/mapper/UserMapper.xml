<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 指定工作空间，要与接口名相同，源代码没有去看，猜测应该是通过"这里的namespace.下边方法的id"来定位方法的 -->
<mapper namespace="com.skyworth.mapper.UserMapper">
	<!-- query userlist -->
	<resultMap id="BaseResultMap" type="com.skyworth.entity.User">
		<id column="tour_id"  property="tourId" jdbcType="INTEGER"/>
		<result column="tour_type_name" property="tourTypeName" jdbcType="VARCHAR" />
		<result column="tour_type" property="tourType" jdbcType="INTEGER" />
		<result column="tour_account" property="tourAccount" jdbcType="VARCHAR" />
		<result column="tour_password" property="tourPassword" jdbcType="VARCHAR" />
		<result column="tour_name" property="tourName" jdbcType="VARCHAR" />
		<result column="tour_english_name" property="tourEnglishName" jdbcType="VARCHAR" />
		<result column="tour_sex" property="tourSex" jdbcType="INTEGER" />
		<result column="tour_address" property="tourAddress" jdbcType="VARCHAR" />
		<result column="tour_telphone" property="tourTelphone" jdbcType="VARCHAR" />
		<result column="tour_mail" property="tourMail" jdbcType="VARCHAR" />
		<result column="tour_fox" property="tourFox" jdbcType="VARCHAR" />
		<result column="isenable" property="isenable" jdbcType="INTEGER" />
	</resultMap>
	<select id="queryUserList" resultMap="BaseResultMap" parameterType="Map">
		SELECT

		tour_id,tour_type,code.code_name as tour_type_name
		,tour_account,tour_password,tour_name,tour_english_name,
		tour_sex,tour_address,tour_telphone,tour_mail,tour_fox,user.isenable

		FROM tvso_user user
		LEFT JOIN
		tvso_parameter_code code ON code.code_code = user.tour_type AND code_type = 'user_type'
		WHERE 1=1
		<if test="tourAccount != null and tourAccount != ''"> AND tour_account LIKE CONCAT(#{tourAccount},'%')</if>
		<if test="tourName != null and tourName != ''"> AND tour_name LIKE CONCAT(#{tourName},'%')</if>
		ORDER BY tour_id DESC
	</select>
	
	<!-- query userbyid -->
	<select id="findUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT

		tour_id,tour_type,code.code_name as tour_type_name
		,tour_account,tour_password,tour_name,tour_english_name,
		tour_sex,tour_address,tour_telphone,tour_mail,tour_fox,user.isenable

		FROM tvso_user user
		LEFT JOIN
		tvso_parameter_code code ON code.code_code = user.tour_type AND code_type = 'user_type'
		WHERE tour_id = #{tourId}
	</select>

	<!-- query userbyaccount -->
	<resultMap id="UserResultMap" type="com.skyworth.entity.AdminUser">
		<result column="tour_account" property="adminAccount" jdbcType="VARCHAR" />
		<result column="tour_password" property="adminPassword" jdbcType="VARCHAR" />
		<result column="tour_name" property="adminName" jdbcType="VARCHAR" />
		<result column="isenable" property="adminIsenable" jdbcType="INTEGER" />
	</resultMap>
	<select id="findUserByAccount" resultMap="UserResultMap" parameterType="java.lang.String">
		SELECT

		tour_account,tour_password,tour_name,isenable

		FROM tvso_user
		WHERE 1=1
		<if test="_parameter != null and _parameter != ''"> AND tour_account = #{_parameter}</if>
	</select>

	<!-- add user -->
	<insert id="addUser" parameterType="com.skyworth.entity.User">
		<![CDATA[
		INSERT INTO tvso_user
		(tour_type,
		tour_account,tour_password,tour_name,tour_english_name,
		tour_sex,tour_address,tour_telphone,tour_mail,tour_fox)

		VALUES

		(#{tourType},
		#{tourAccount},#{tourPassword}, #{tourName}, #{tourEnglishName},
		#{tourSex},#{tourAddress},#{tourTelphone},#{tourMail},#{tourFox})
		]]>
	</insert>

	<!-- update user -->
	<update id="updateUser" parameterType="com.skyworth.entity.User">
	<![CDATA[
		UPDATE tvso_user
		SET
		tour_english_name = #{tourEnglishName},
		tour_sex = #{tourSex},
		tour_address = #{tourAddress},
		tour_telphone = #{tourTelphone},
		tour_mail = #{tourMail},
		tour_fox = #{tourFox},
		isenable = #{isenable},
		modtime = now(),
		moduser = #{tourAccount}
		WHERE tour_id = #{tourId}
		]]>
	</update>

	<!-- update password -->
	<update id="updatePassword" parameterType="java.util.Map">
		UPDATE tvso_user
		SET tour_password = #{password},
		modtime = now(),
		moduser = #{account}
		WHERE tour_account = #{tourAccount}
	</update>

	<!-- unable user -->
	<update id="unableUser" parameterType="java.lang.Integer">
		UPDATE tvso_user
		SET isenable = 0,
		modtime = now(),
		moduser = #{account}
		WHERE tour_id = #{tourId}
	</update>
	
	<!-- effect user -->
	<update id="effectUser" parameterType="java.lang.Integer">
		UPDATE tvso_user
		SET isenable = 1,
		modtime = now(),
		moduser = #{account}
		WHERE tour_id = #{tourId}
	</update>

	<!-- delete user -->
	<delete id="deleteUser" parameterType="java.lang.Integer">
		DELETE FROM tvso_user
		WHERE tour_id = #{tourId}
	</delete>

	<!-- query user by keyword -->
	<select id="queryUserByKey" parameterType="java.lang.String" resultType="java.util.HashMap">
		<![CDATA[
		SELECT
		CONCAT(tour_name ,'(',tour_account ,')') as tourName , tour_account as tourAccount
		FROM tvso_user
		WHERE 1 = 1
		]]>
		<if test="_parameter != null and _parameter != ''"> AND locate( #{_parameter},tour_name) OR locate( #{_parameter},tour_account)</if>
		<if test="_parameter == null or _parameter == ''"> limit 10</if>
	</select>

	<!-- check account exsts -->
	<select id="checkAccount" parameterType="java.lang.String" resultType="java.lang.Boolean">
		SELECT count(tour_account)
		FROM tvso_user
		WHERE tour_account = #{_parameter}
	</select>
</mapper>